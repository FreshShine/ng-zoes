import { OnInit, EventEmitter, ChangeDetectorRef, SimpleChanges } from '@angular/core';
import { LocaleService } from './../../theme/locale.service';
import { STChange, STColumn, STData, STPage, STReq } from './table.interface';
import { TableService } from './table.service';
import { NzTableComponent } from 'ng-zorro-antd';
export declare class TableComponent implements OnInit {
    private cdr;
    private servie;
    private locale;
    data: any;
    columns: STColumn[];
    ps: number;
    pi: number;
    total: any;
    loading: boolean | null;
    scroll: {
        y?: string;
        x?: string;
    };
    url: string;
    req: STReq;
    page: STPage;
    operators: any;
    readonly change: EventEmitter<STChange>;
    bordered: boolean;
    readonly orgTable: NzTableComponent;
    _allChecked: boolean;
    _allCheckedDisabled: boolean;
    _indeterminate: boolean;
    private totalTpl;
    _isPagination: boolean;
    _isSizeChanger: boolean;
    _isQuickJumper: boolean;
    _isPageSizeOptions: number[];
    _isOnSinglePage: boolean;
    _paginationPosition: string;
    _frontPagination: boolean;
    local: any;
    _data: any;
    constructor(cdr: ChangeDetectorRef, servie: TableService, locale: LocaleService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private _refCheck;
    cd(): this;
    private updateTotalTpl;
    toBoolean(value: any, allowUndefined?: boolean | null): boolean | undefined;
    _checkNotify(): this;
    _checkAll(checked: boolean, item: STData): this;
    _checkSelection(i: STData, value: boolean): this;
    _refRadio(checked: boolean, item: STData): this;
    _changeOperator(operators: any): void;
    _changePage(page: any): void;
    _pageIndexChange(pi: any): void;
    _pageSizeChange(ps: any): void;
    _showData(data: any): void;
    _loadData(url: any, req: any): void;
    _rowClick(e: Event, item: STData, index: number): void;
    setData(list: any, total: any): void;
    private changeEmit;
    renderTotal(total: string, range: string[]): string;
}
